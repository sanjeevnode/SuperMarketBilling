/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.supermarket.billing;

import com.supermarket.billing.classes.database;
import com.supermarket.billing.classes.toast;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.sql.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author 20383
 */
public class SellerPannel extends javax.swing.JFrame {

    /**
     * Creates new form SellerPannel
     */
    private Connection con;
    private final DefaultTableModel productTableModel;
    private final DefaultTableModel itemCartTableModel;
    private final DefaultTableModel billTableModel;
    private final DefaultTableModel viewSalesTableModel;
    private int selectedProductTableRow;
    private int selectedItemCartTableRow;
    private boolean current;
    public SellerPannel() {
        initComponents();
        con = database.db();
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        productTable.setDefaultRenderer(String.class, centerRenderer);
        productTable.setDefaultRenderer(Integer.class, centerRenderer);
        productTable.setDefaultRenderer(Double.class, centerRenderer);
        productTable.getTableHeader().setFont(new Font("Times New Roman", Font.BOLD, 18));
        productTable.getTableHeader().setDefaultRenderer(centerRenderer);
        
        billTable.setDefaultRenderer(String.class, centerRenderer);
        billTable.setDefaultRenderer(Integer.class, centerRenderer);
        billTable.setDefaultRenderer(Double.class, centerRenderer);
        billTable.getTableHeader().setFont(new Font("Times New Roman", Font.BOLD, 18));
        billTable.getTableHeader().setDefaultRenderer(centerRenderer);
        
        itemCartTable.setDefaultRenderer(String.class, centerRenderer);
        itemCartTable.setDefaultRenderer(Integer.class, centerRenderer);
        itemCartTable.setDefaultRenderer(Double.class, centerRenderer);
        itemCartTable.getTableHeader().setDefaultRenderer(centerRenderer);
        itemCartTable.getTableHeader().setFont(new Font("Times New Roman", Font.PLAIN, 14));
        
        salesTable.setDefaultRenderer(String.class, centerRenderer);
        salesTable.setDefaultRenderer(Integer.class, centerRenderer);
        salesTable.setDefaultRenderer(Double.class, centerRenderer);
        salesTable.getTableHeader().setDefaultRenderer(centerRenderer);
        salesTable.getTableHeader().setFont(new Font("Times New Roman", Font.PLAIN, 18));
        current=true;
        for (Component cp : addProductsPannel.getComponents()) {
            cp.setEnabled(false);
        }
        for (Component cp : productListPannel.getComponents()) {
            cp.setEnabled(false);
        }
        for (Component cp : itemCartPannel.getComponents()) {
            cp.setEnabled(false);
        }
        productTable.setEnabled(false);

        this.productTableModel = (DefaultTableModel) productTable.getModel();
        this.itemCartTableModel = (DefaultTableModel) itemCartTable.getModel();
        this.billTableModel = (DefaultTableModel) billTable.getModel();
        this.viewSalesTableModel = (DefaultTableModel)salesTable.getModel();
        selectedProductTableRow = -1;
        selectedItemCartTableRow = -1;
        try {
            String[] categoryItem;
            int i = 0;
            String querry1 = "select count(*) from categorytable;";
            Statement stm1 = con.createStatement();
            ResultSet rs1 = stm1.executeQuery(querry1);
            rs1.next();
            int n = rs1.getInt(1);
            categoryItem = new String[n];

            String querry2 = "select * from categorytable;";
            Statement stm2 = con.createStatement();
            ResultSet rs2 = stm2.executeQuery(querry2);
            while (rs2.next()) {
                categoryItem[i] = rs2.getString("CategoryName");
                i++;
            }

            categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(categoryItem));

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        headingLabel = new javax.swing.JLabel();
        signoutLabel = new javax.swing.JLabel();
        viewsalesLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        billingPannel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        customerNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        customerPhoneField = new javax.swing.JTextField();
        continueButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        addProductsPannel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        itemNameField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        itemQuantityField = new javax.swing.JTextField();
        addItemButton = new javax.swing.JButton();
        removeItemButton = new javax.swing.JButton();
        clearButtnon = new javax.swing.JButton();
        itemCartPannel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemCartTable = new javax.swing.JTable();
        billNextButton = new javax.swing.JButton();
        productListPannel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox<>();
        filterButton = new javax.swing.JButton();
        refreshProductButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        salesPannel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        customerNameLabel = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        customerPhoneLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        billTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        billAmountLabel1 = new javax.swing.JLabel();
        billAmountLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        checkoutButton = new javax.swing.JButton();
        viewSalesPannel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        sellerNameLabel = new javax.swing.JLabel();
        sellerPhoneLabel = new javax.swing.JLabel();
        sellerGenderLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        salesTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Seller Pannel");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(23, 11, 103));

        headingLabel.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        headingLabel.setForeground(new java.awt.Color(249, 76, 0));
        headingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headingLabel.setText("Billing Point");

        signoutLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        signoutLabel.setForeground(new java.awt.Color(255, 51, 0));
        signoutLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signoutLabel.setText("Signout");
        signoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signoutLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signoutLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signoutLabelMouseExited(evt);
            }
        });

        viewsalesLabel.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        viewsalesLabel.setForeground(new java.awt.Color(255, 51, 0));
        viewsalesLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        viewsalesLabel.setText("View Sales");
        viewsalesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewsalesLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                viewsalesLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                viewsalesLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(viewsalesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(headingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(signoutLabel)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(headingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(signoutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(viewsalesLabel))
        );

        jPanel2.setBackground(new java.awt.Color(23, 11, 103));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(23, 11, 103));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(23, 11, 103));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        jPanel5.setBackground(new java.awt.Color(204, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 1, true), "Customer Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Cambria Math", 1, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Customer Name ");

        customerNameField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        customerNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        customerNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customerNameFieldKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Phone number");

        customerPhoneField.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        customerPhoneField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customerPhoneFieldKeyPressed(evt);
            }
        });

        continueButton.setBackground(new java.awt.Color(0, 0, 153));
        continueButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        continueButton.setForeground(new java.awt.Color(204, 102, 0));
        continueButton.setText("CONTINUE");
        continueButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        continueButton.setBorderPainted(false);
        continueButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                continueButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                continueButtonMouseExited(evt);
            }
        });
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueButtonActionPerformed(evt);
            }
        });

        refreshButton.setBackground(new java.awt.Color(0, 0, 153));
        refreshButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(204, 102, 0));
        refreshButton.setText("REFRESH");
        refreshButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshButton.setBorderPainted(false);
        refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshButtonMouseExited(evt);
            }
        });
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(customerNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(customerPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(continueButton)
                .addGap(30, 30, 30)
                .addComponent(refreshButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(continueButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerPhoneField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerNameField, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addProductsPannel.setBackground(new java.awt.Color(204, 255, 255));
        addProductsPannel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 0), 1, true), "Add Products", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Name ");

        itemNameField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        itemNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        itemNameField.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Quantity");

        itemQuantityField.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        itemQuantityField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        itemQuantityField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemQuantityFieldActionPerformed(evt);
            }
        });
        itemQuantityField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemQuantityFieldKeyPressed(evt);
            }
        });

        addItemButton.setBackground(new java.awt.Color(0, 0, 153));
        addItemButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        addItemButton.setForeground(new java.awt.Color(204, 102, 0));
        addItemButton.setText("ADD");
        addItemButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addItemButton.setBorderPainted(false);
        addItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addItemButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addItemButtonMouseExited(evt);
            }
        });
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        removeItemButton.setBackground(new java.awt.Color(0, 0, 153));
        removeItemButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        removeItemButton.setForeground(new java.awt.Color(204, 102, 0));
        removeItemButton.setText("REMOVE");
        removeItemButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        removeItemButton.setBorderPainted(false);
        removeItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeItemButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeItemButtonMouseExited(evt);
            }
        });
        removeItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemButtonActionPerformed(evt);
            }
        });

        clearButtnon.setBackground(new java.awt.Color(0, 0, 153));
        clearButtnon.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        clearButtnon.setForeground(new java.awt.Color(204, 102, 0));
        clearButtnon.setText("CLEAR");
        clearButtnon.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        clearButtnon.setBorderPainted(false);
        clearButtnon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearButtnonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearButtnonMouseExited(evt);
            }
        });
        clearButtnon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtnonActionPerformed(evt);
            }
        });

        itemCartPannel.setBackground(new java.awt.Color(153, 255, 255));
        itemCartPannel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(23, 11, 103), 1, true), "Items in Cart", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        itemCartTable.setBackground(new java.awt.Color(204, 255, 255));
        itemCartTable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        itemCartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Quantity", "Price(per)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemCartTable.setGridColor(new java.awt.Color(153, 255, 255));
        itemCartTable.setRowHeight(30);
        itemCartTable.getTableHeader().setReorderingAllowed(false);
        itemCartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemCartTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(itemCartTable);
        if (itemCartTable.getColumnModel().getColumnCount() > 0) {
            itemCartTable.getColumnModel().getColumn(0).setResizable(false);
            itemCartTable.getColumnModel().getColumn(1).setResizable(false);
            itemCartTable.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout itemCartPannelLayout = new javax.swing.GroupLayout(itemCartPannel);
        itemCartPannel.setLayout(itemCartPannelLayout);
        itemCartPannelLayout.setHorizontalGroup(
            itemCartPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemCartPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        itemCartPannelLayout.setVerticalGroup(
            itemCartPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemCartPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        billNextButton.setBackground(new java.awt.Color(0, 0, 153));
        billNextButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        billNextButton.setForeground(new java.awt.Color(204, 102, 0));
        billNextButton.setText("NEXT");
        billNextButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        billNextButton.setBorderPainted(false);
        billNextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                billNextButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                billNextButtonMouseExited(evt);
            }
        });
        billNextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                billNextButtonActionPerformed(evt);
            }
        });

        productListPannel.setBackground(new java.awt.Color(153, 255, 255));
        productListPannel.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(23, 11, 103), 1, true), "Product List", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(51, 51, 51))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Category");

        categoryComboBox.setFont(new java.awt.Font("Cambria Math", 1, 14)); // NOI18N
        categoryComboBox.setMaximumRowCount(10);
        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        filterButton.setBackground(new java.awt.Color(0, 0, 153));
        filterButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        filterButton.setForeground(new java.awt.Color(204, 102, 0));
        filterButton.setText("FILTER");
        filterButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        filterButton.setBorderPainted(false);
        filterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                filterButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                filterButtonMouseExited(evt);
            }
        });
        filterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterButtonActionPerformed(evt);
            }
        });

        refreshProductButton.setBackground(new java.awt.Color(0, 0, 153));
        refreshProductButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        refreshProductButton.setForeground(new java.awt.Color(204, 102, 0));
        refreshProductButton.setText("REFRESH");
        refreshProductButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshProductButton.setBorderPainted(false);
        refreshProductButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshProductButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshProductButtonMouseExited(evt);
            }
        });
        refreshProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshProductButtonActionPerformed(evt);
            }
        });

        productTable.setBackground(new java.awt.Color(204, 255, 255));
        productTable.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Name", "Quantity", "Price", "Category"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productTable.setGridColor(new java.awt.Color(153, 255, 255));
        productTable.setRowHeight(30);
        productTable.getTableHeader().setReorderingAllowed(false);
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);
        if (productTable.getColumnModel().getColumnCount() > 0) {
            productTable.getColumnModel().getColumn(0).setResizable(false);
            productTable.getColumnModel().getColumn(1).setResizable(false);
            productTable.getColumnModel().getColumn(2).setResizable(false);
            productTable.getColumnModel().getColumn(3).setResizable(false);
            productTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout productListPannelLayout = new javax.swing.GroupLayout(productListPannel);
        productListPannel.setLayout(productListPannelLayout);
        productListPannelLayout.setHorizontalGroup(
            productListPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productListPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productListPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                    .addGroup(productListPannelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(filterButton)
                        .addGap(37, 37, 37)
                        .addComponent(refreshProductButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        productListPannelLayout.setVerticalGroup(
            productListPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productListPannelLayout.createSequentialGroup()
                .addGroup(productListPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterButton)
                    .addComponent(refreshProductButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout addProductsPannelLayout = new javax.swing.GroupLayout(addProductsPannel);
        addProductsPannel.setLayout(addProductsPannelLayout);
        addProductsPannelLayout.setHorizontalGroup(
            addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProductsPannelLayout.createSequentialGroup()
                .addGroup(addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addProductsPannelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(itemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(itemQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addProductsPannelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(productListPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addProductsPannelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(itemCartPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(addProductsPannelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(removeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(clearButtnon)
                        .addGap(23, 23, 23))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addProductsPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(billNextButton)
                .addContainerGap())
        );
        addProductsPannelLayout.setVerticalGroup(
            addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addProductsPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(itemQuantityField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(clearButtnon, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(itemNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(removeItemButton)
                        .addComponent(addItemButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(addProductsPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(productListPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemCartPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(billNextButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout billingPannelLayout = new javax.swing.GroupLayout(billingPannel);
        billingPannel.setLayout(billingPannelLayout);
        billingPannelLayout.setHorizontalGroup(
            billingPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(addProductsPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        billingPannelLayout.setVerticalGroup(
            billingPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(billingPannelLayout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addProductsPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.add(billingPannel, "card2");

        salesPannel.setBackground(new java.awt.Color(204, 255, 255));

        jPanel6.setBackground(new java.awt.Color(204, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), "Bill", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Ravie", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setText("ONDOOR SUPERMARKET");

        jLabel8.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Name");

        customerNameLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        customerNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel9.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Phone");

        customerPhoneLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        billTable.setBackground(new java.awt.Color(153, 255, 255));
        billTable.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        billTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SNO.", "ProductName", "Quantity", "Price(each)", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        billTable.setGridColor(new java.awt.Color(255, 153, 51));
        billTable.setRowHeight(24);
        billTable.setShowHorizontalLines(false);
        billTable.setShowVerticalLines(false);
        billTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(billTable);
        if (billTable.getColumnModel().getColumnCount() > 0) {
            billTable.getColumnModel().getColumn(0).setResizable(false);
            billTable.getColumnModel().getColumn(1).setResizable(false);
            billTable.getColumnModel().getColumn(2).setResizable(false);
            billTable.getColumnModel().getColumn(3).setResizable(false);
            billTable.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel10.setFont(new java.awt.Font("Cambria Math", 1, 20)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Total Payable Amount :-");

        billAmountLabel1.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        billAmountLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        billAmountLabel.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        billAmountLabel.setForeground(new java.awt.Color(255, 51, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(252, 252, 252))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(customerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(182, 182, 182)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(customerPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(166, 166, 166)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(billAmountLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(billAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 714, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(112, 112, 112))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerPhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(billAmountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(billAmountLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        backButton.setBackground(new java.awt.Color(0, 0, 153));
        backButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(204, 102, 0));
        backButton.setText("BACK");
        backButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        backButton.setBorderPainted(false);
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backButtonMouseExited(evt);
            }
        });
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        checkoutButton.setBackground(new java.awt.Color(0, 0, 153));
        checkoutButton.setFont(new java.awt.Font("Centaur", 1, 18)); // NOI18N
        checkoutButton.setForeground(new java.awt.Color(204, 102, 0));
        checkoutButton.setText("Checkout");
        checkoutButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        checkoutButton.setBorderPainted(false);
        checkoutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkoutButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkoutButtonMouseExited(evt);
            }
        });
        checkoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout salesPannelLayout = new javax.swing.GroupLayout(salesPannel);
        salesPannel.setLayout(salesPannelLayout);
        salesPannelLayout.setHorizontalGroup(
            salesPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(salesPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(salesPannelLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 922, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(salesPannelLayout.createSequentialGroup()
                        .addComponent(backButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkoutButton)))
                .addContainerGap())
        );
        salesPannelLayout.setVerticalGroup(
            salesPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(salesPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutButton)
                    .addComponent(backButton))
                .addContainerGap())
        );

        jLayeredPane1.add(salesPannel, "card2");

        viewSalesPannel.setBackground(new java.awt.Color(204, 255, 255));

        jPanel7.setBackground(new java.awt.Color(153, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Seller Details", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Name");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Phone");

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Gender");

        sellerNameLabel.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N

        sellerPhoneLabel.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N

        sellerGenderLabel.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(sellerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(sellerPhoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addComponent(sellerGenderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sellerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sellerGenderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellerPhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(153, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Sales Tabel", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        salesTable.setBackground(new java.awt.Color(204, 255, 255));
        salesTable.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        salesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SNO", "Customer Name", "Customer Phone", "Purchase Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salesTable.setGridColor(new java.awt.Color(204, 255, 255));
        salesTable.setRowHeight(30);
        salesTable.setSelectionBackground(new java.awt.Color(0, 153, 153));
        salesTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        salesTable.setShowGrid(true);
        salesTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(salesTable);
        if (salesTable.getColumnModel().getColumnCount() > 0) {
            salesTable.getColumnModel().getColumn(0).setResizable(false);
            salesTable.getColumnModel().getColumn(1).setResizable(false);
            salesTable.getColumnModel().getColumn(2).setResizable(false);
            salesTable.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout viewSalesPannelLayout = new javax.swing.GroupLayout(viewSalesPannel);
        viewSalesPannel.setLayout(viewSalesPannelLayout);
        viewSalesPannelLayout.setHorizontalGroup(
            viewSalesPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewSalesPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewSalesPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        viewSalesPannelLayout.setVerticalGroup(
            viewSalesPannelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewSalesPannelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLayeredPane1.add(viewSalesPannel, "card4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLayeredPane1)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void continueButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueButtonActionPerformed
        // TODO add your handling code here:
        if (customerNameField.getText().equals("") || customerPhoneField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Customer Name or Customer Phone field is empty", "Warnning", JOptionPane.WARNING_MESSAGE);
        } else {
            for (Component cp : addProductsPannel.getComponents()) {
                cp.setEnabled(true);
            }
            for (Component cp : productListPannel.getComponents()) {
                cp.setEnabled(true);
            }
            for (Component cp : itemCartPannel.getComponents()) {
                cp.setEnabled(true);
            }
            productTable.setEnabled(true);
            customerNameField.setEditable(false);
            customerPhoneField.setEditable(false);
            productTableModel.setRowCount(0);
            
            try {
                Statement stm = con.createStatement();
                String querry = "select * from producttable;";

                ResultSet rs = stm.executeQuery(querry);

                while (rs.next()) {
                    int productid = rs.getInt("ProductId");
                    String productname = rs.getString("ProductName");
                    int productquantity = rs.getInt("Quantity");
                    double productprice = rs.getDouble("Price");
                    String productcat = rs.getString("Category");

                    productTableModel.addRow(new Object[]{productid, productname, productquantity, productprice, productcat});
                    continueButton.setEnabled(false);
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error !!", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_continueButtonActionPerformed

    private void billNextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_billNextButtonActionPerformed
        // TODO add your handling code here:
        if(itemCartTableModel.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "Please add items in cart for billing", "Warnning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            double totalPayableAmount = 0;
             try{
              billTableModel.setRowCount(0);
            for (int i = 0; i < itemCartTableModel.getRowCount(); i++) {
                int sno = i + 1;
                System.out.println(sno);
                
                String itemname = itemCartTableModel.getValueAt(i, 0).toString();
                System.out.println(itemname);
                
                int itemquant = (int) itemCartTableModel.getValueAt(i, 1);
                System.out.println(itemquant);
                
                double itemprice = (double) itemCartTableModel.getValueAt(i, 2);
                System.out.println(itemprice);
                
                double totalprice = itemquant * itemprice;
                System.out.println(totalprice);
                
                totalPayableAmount =totalPayableAmount+totalprice;
                
                billTableModel.addRow(new Object[]{sno, itemname, itemquant, itemprice, totalprice});
            }
            billAmountLabel1.setText("₹ ");
            billAmountLabel.setText(""+totalPayableAmount);
                billingPannel.setVisible(false);
                salesPannel.setVisible(true);
                current=false;
                customerNameLabel.setText(customerNameField.getText());
                customerPhoneLabel.setText(customerPhoneField.getText());
             }
             catch(Exception e){
                 
             }
        }
        

    }//GEN-LAST:event_billNextButtonActionPerformed

    private void itemQuantityFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemQuantityFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemQuantityFieldActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        for (Component cp : addProductsPannel.getComponents()) {
            cp.setEnabled(false);
        }
        for (Component cp : productListPannel.getComponents()) {
            cp.setEnabled(false);
        }
        for (Component cp : itemCartPannel.getComponents()) {
            cp.setEnabled(false);
        }
        continueButton.setEnabled(true);
           customerNameField.setEditable(true);
            customerPhoneField.setEditable(true);
        productTable.setEnabled(false);
        itemCartTable.setEnabled(false);
        billTableModel.setRowCount(0);
        itemCartTableModel.setRowCount(0);
        productTableModel.setRowCount(0);
        customerNameField.setText("");
        customerPhoneField.setText("");
        itemNameField.setText("");
        itemQuantityField.setText("");
        itemNameField.setEditable(true);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        // TODO add your handling code here:
        int i = productTable.getSelectedRow();
        selectedProductTableRow = i;

        itemNameField.setText(productTableModel.getValueAt(i, 1).toString());
        itemNameField.setEditable(false);
    }//GEN-LAST:event_productTableMouseClicked

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        // TODO add your handling code here:
        if (selectedProductTableRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select an item to add", "Warnning", JOptionPane.WARNING_MESSAGE);
        } else if (itemNameField.getText().equals("") || itemQuantityField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Item Name or Quantity field is empty", "Warnning", JOptionPane.WARNING_MESSAGE);
        } else if ((Integer.parseInt(itemQuantityField.getText()) < 1) || (Integer.parseInt(itemQuantityField.getText()) > (int) productTableModel.getValueAt(selectedProductTableRow, 2))) {
            JOptionPane.showMessageDialog(null, "Quantity excede available number of products", "Warnning", JOptionPane.WARNING_MESSAGE);
        } else {
            String itemname = itemNameField.getText();
            int quantity = Integer.parseInt(itemQuantityField.getText());
            int quantityLeft = (int) productTableModel.getValueAt(selectedProductTableRow, 2) - quantity;
            itemCartTableModel.addRow(new Object[]{itemname, quantity, productTableModel.getValueAt(selectedProductTableRow, 3)});

            try {
                String addQuerry = "update producttable set Quantity = ? where ProductId = ?;";

                PreparedStatement pst = con.prepareStatement(addQuerry);

                pst.setInt(1, quantityLeft);
                pst.setInt(2, (int) productTableModel.getValueAt(selectedProductTableRow, 0));
                pst.execute();

                productTableModel.setValueAt(quantityLeft, selectedProductTableRow, 2);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

            itemNameField.setText("");
            itemNameField.setEditable(true);
            itemQuantityField.setText("");
            selectedProductTableRow = -1;

        }


    }//GEN-LAST:event_addItemButtonActionPerformed

    private void itemCartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemCartTableMouseClicked
        // TODO add your handling code here:
        int i = itemCartTable.getSelectedRow();

        selectedItemCartTableRow = i;

    }//GEN-LAST:event_itemCartTableMouseClicked

    private void removeItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemButtonActionPerformed

        if (selectedItemCartTableRow == -1) {
            JOptionPane.showMessageDialog(null, "Please select item to remove from cart ", "Warnning", JOptionPane.WARNING_MESSAGE);
        } else {
            int newQuantity = 0, quantityLeft = 0;
            String productname = itemCartTableModel.getValueAt(selectedItemCartTableRow, 0).toString();
            try {

                String fetch = "select * from producttable where ProductName = '" + productname + "';";

                Statement st = con.createStatement();
                ResultSet rs = st.executeQuery(fetch);
                if (rs.next()) {
                    quantityLeft = rs.getInt("Quantity");
                }

                newQuantity = quantityLeft + (int) itemCartTableModel.getValueAt(selectedItemCartTableRow, 1);
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }

            try {
                String addQuerry = "update producttable set Quantity = ? where ProductName = ?;";
                PreparedStatement pst = con.prepareStatement(addQuerry);
                pst.setInt(1, newQuantity);
                pst.setString(2, productname);
                pst.execute();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            itemCartTableModel.removeRow(selectedItemCartTableRow);
            selectedItemCartTableRow = -1;

            try {
                productTableModel.setRowCount(0);
                Statement stm = con.createStatement();
                String querry = "select * from producttable;";

                ResultSet rs = stm.executeQuery(querry);

                while (rs.next()) {
                    int productid = rs.getInt("ProductId");
                    String productName = rs.getString("ProductName");
                    int productquantity = rs.getInt("Quantity");
                    double productprice = rs.getDouble("Price");
                    String productcat = rs.getString("Category");

                    productTableModel.addRow(new Object[]{productid, productName, productquantity, productprice, productcat});
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error !!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_removeItemButtonActionPerformed

    private void clearButtnonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtnonActionPerformed
        // TODO add your handling code here:
        itemNameField.setText("");
        itemNameField.setEditable(true);
        itemQuantityField.setText("");
    }//GEN-LAST:event_clearButtnonActionPerformed

    private void filterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterButtonActionPerformed
        // TODO add your handling code here:
        String category = (String) categoryComboBox.getSelectedItem();
        
        try {
                productTableModel.setRowCount(0);
                Statement stm = con.createStatement();
                String querry = "select * from producttable where Category = '"+ category +"';";

                ResultSet rs = stm.executeQuery(querry);

                while (rs.next()) {
                    int productid = rs.getInt("ProductId");
                    String productName = rs.getString("ProductName");
                    int productquantity = rs.getInt("Quantity");
                    double productprice = rs.getDouble("Price");
                    String productcat = rs.getString("Category");

                    productTableModel.addRow(new Object[]{productid, productName, productquantity, productprice, productcat});
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error !!", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_filterButtonActionPerformed

    private void refreshProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshProductButtonActionPerformed
        // TODO add your handling code here:
         try {
                productTableModel.setRowCount(0);
                Statement stm = con.createStatement();
                String querry = "select * from producttable ;";

                ResultSet rs = stm.executeQuery(querry);

                while (rs.next()) {
                    int productid = rs.getInt("ProductId");
                    String productName = rs.getString("ProductName");
                    int productquantity = rs.getInt("Quantity");
                    double productprice = rs.getDouble("Price");
                    String productcat = rs.getString("Category");

                    productTableModel.addRow(new Object[]{productid, productName, productquantity, productprice, productcat});
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error !!", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_refreshProductButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        salesPannel.setVisible(false);
        billingPannel.setVisible(true);
        current = true;
    }//GEN-LAST:event_backButtonActionPerformed

    private void signoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutLabelMouseClicked
        // TODO add your handling code here:
        new Login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_signoutLabelMouseClicked

    private void signoutLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutLabelMouseEntered
        // TODO add your handling code here:
        signoutLabel.setText("<html><u>"+signoutLabel.getText()+"</u></html>");
        signoutLabel.setForeground(new java.awt.Color(255,205,51));
        signoutLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        
    }//GEN-LAST:event_signoutLabelMouseEntered

    private void signoutLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutLabelMouseExited
        // TODO add your handling code here:
          signoutLabel.setText("<html>Signout</html>");
        signoutLabel.setForeground(new java.awt.Color(255,51,0));
    }//GEN-LAST:event_signoutLabelMouseExited

    private void continueButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continueButtonMouseEntered
        // TODO add your handling code here:
        continueButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        continueButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_continueButtonMouseEntered

    private void continueButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continueButtonMouseExited
        // TODO add your handling code here:
        continueButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_continueButtonMouseExited

    private void refreshButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseEntered
        // TODO add your handling code here:
         refreshButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        refreshButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_refreshButtonMouseEntered

    private void refreshButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseExited
        // TODO add your handling code here:
        refreshButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_refreshButtonMouseExited

    private void addItemButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addItemButtonMouseEntered
        // TODO add your handling code here:
        addItemButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        addItemButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_addItemButtonMouseEntered

    private void addItemButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addItemButtonMouseExited
        // TODO add your handling code here:
        addItemButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_addItemButtonMouseExited

    private void removeItemButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeItemButtonMouseEntered
        // TODO add your handling code here:
        removeItemButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        removeItemButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_removeItemButtonMouseEntered

    private void removeItemButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeItemButtonMouseExited
        // TODO add your handling code here:
        removeItemButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_removeItemButtonMouseExited

    private void clearButtnonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtnonMouseEntered
        // TODO add your handling code here:
        clearButtnon.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        clearButtnon.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_clearButtnonMouseEntered

    private void clearButtnonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearButtnonMouseExited
        // TODO add your handling code here:
        clearButtnon.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_clearButtnonMouseExited

    private void filterButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterButtonMouseEntered
        // TODO add your handling code here:
         filterButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        filterButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_filterButtonMouseEntered

    private void filterButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_filterButtonMouseExited
        // TODO add your handling code here:
        filterButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_filterButtonMouseExited

    private void refreshProductButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshProductButtonMouseEntered
        // TODO add your handling code here:
         refreshProductButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        refreshProductButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_refreshProductButtonMouseEntered

    private void refreshProductButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshProductButtonMouseExited
        // TODO add your handling code here:
        refreshProductButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_refreshProductButtonMouseExited

    private void billNextButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billNextButtonMouseEntered
        // TODO add your handling code here:
         billNextButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        billNextButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_billNextButtonMouseEntered

    private void billNextButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billNextButtonMouseExited
        // TODO add your handling code here:
        billNextButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_billNextButtonMouseExited

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered
        // TODO add your handling code here:
         backButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        backButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_backButtonMouseEntered

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseExited
        // TODO add your handling code here:
        backButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_backButtonMouseExited

    private void checkoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutButtonActionPerformed
        // TODO add your handling code here:
        String customername = customerNameField.getText();
        String customerphone = customerPhoneField.getText();
        double purchaseamount = Double.parseDouble(billAmountLabel.getText());
        String sellerusername = Login.sellerUserName;
        try {
            String querry = "insert into salestable(SellerName,CustomerName,CustomerPhone,PurchaseAmount) values(?,?,?,?); ";
            PreparedStatement pst = con.prepareStatement(querry);
            pst.setString(1, sellerusername);
            pst.setString(2, customername);
            pst.setString(3, customerphone);
            pst.setDouble(4, purchaseamount);
            pst.execute();
            new toast("Billing Sucessfull ",725,640);
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        for (Component cp : addProductsPannel.getComponents()) {
            cp.setEnabled(false);
        }
        for (Component cp : productListPannel.getComponents()) {
            cp.setEnabled(false);
        }
        for (Component cp : itemCartPannel.getComponents()) {
            cp.setEnabled(false);
        }
        continueButton.setEnabled(true);
        customerNameField.setEditable(true);
        customerPhoneField.setEditable(true);
        productTable.setEnabled(false);
        itemCartTable.setEnabled(false);
        billTableModel.setRowCount(0);
        itemCartTableModel.setRowCount(0);
        productTableModel.setRowCount(0);
        customerNameField.setText("");
        customerPhoneField.setText("");
        itemNameField.setText("");
        itemQuantityField.setText("");
        itemNameField.setEditable(true);
           
        billingPannel.setVisible(true);
        salesPannel.setVisible(false);
        current=true;

    }//GEN-LAST:event_checkoutButtonActionPerformed
 int b1=1;
    private void viewsalesLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewsalesLabelMouseClicked
        // TODO add your handling code here:
        if(b1==1){
            viewSalesPannel.setVisible(true);
            billingPannel.setVisible(false);
            salesPannel.setVisible(false);
            b1=0;
            
            String sellername = Login.sellerUserName;
            sellerNameLabel.setText(sellername);
             sellerPhoneLabel.setText(Login.sellerPhone) ;
            sellerGenderLabel.setText(Login.sellerGender);
            System.out.println(sellername);
            int i=1;
            try{
                String querry = "select * from salestable where SellerName ='"+ sellername +"'; ";
                Statement stm = con.createStatement();
                ResultSet rs = stm.executeQuery(querry);
                viewSalesTableModel.setRowCount(0);
                    while(rs.next()){
                    System.out.println(rs.getString("CustomerName"));
                   String cname=rs.getString("CustomerName");
                   String cphone =rs.getString("CustomerPhone");
                   double pamount =rs.getDouble("PurchaseAmount");
                   viewSalesTableModel.addRow(new Object[]{i,cname,cphone,pamount});
                   i++;
                }
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(null, e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
            }
        }
        else if(b1==0){
            viewSalesPannel.setVisible(false);
            if(current)
                billingPannel.setVisible(true);
            else
                salesPannel.setVisible(true);
            b1=1;
        }
    }//GEN-LAST:event_viewsalesLabelMouseClicked

    private void viewsalesLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewsalesLabelMouseEntered
        // TODO add your handling code here:
        viewsalesLabel.setText("<html><u>"+viewsalesLabel.getText()+"</u></html>");
        viewsalesLabel.setForeground(new java.awt.Color(255,205,51));
        viewsalesLabel.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_viewsalesLabelMouseEntered

    private void viewsalesLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewsalesLabelMouseExited
        // TODO add your handling code here:
        viewsalesLabel.setText("<html>"+viewsalesLabel.getText()+"</html>");
        viewsalesLabel.setForeground(new java.awt.Color(255,51,0));
    }//GEN-LAST:event_viewsalesLabelMouseExited

    private void customerNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameFieldKeyPressed
        // TODO add your handling code here:
        int c = evt.getKeyChar();
        if ( ((c>=65 && c<=90) || (c >=97 && c<=122)) ||((c == KeyEvent.VK_BACK_SPACE)||(c == KeyEvent.VK_SPACE))) {
            customerNameField.setEditable(true);
        }
        else{
            evt.consume();  // if it's not a number, ignore the event
            customerNameField.setEditable(false);
        }
    }//GEN-LAST:event_customerNameFieldKeyPressed

    private void customerPhoneFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerPhoneFieldKeyPressed
        // TODO add your handling code here:
        int c = evt.getKeyChar();
        if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();  // if it's not a number, ignore the event
            customerPhoneField.setEditable(false);
        }
        else
            customerPhoneField.setEditable(true);
    }//GEN-LAST:event_customerPhoneFieldKeyPressed

    private void itemQuantityFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemQuantityFieldKeyPressed
        // TODO add your handling code here:
        int c = evt.getKeyChar();
        if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
            evt.consume();  // if it's not a number, ignore the event
            itemQuantityField.setEditable(false);
        }
        else
            itemQuantityField.setEditable(true);
    }//GEN-LAST:event_itemQuantityFieldKeyPressed

    private void checkoutButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutButtonMouseEntered
        // TODO add your handling code here:
         checkoutButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        checkoutButton.setBackground(new java.awt.Color(102, 0, 255));
    }//GEN-LAST:event_checkoutButtonMouseEntered

    private void checkoutButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutButtonMouseExited
        // TODO add your handling code here:
        checkoutButton.setBackground(new java.awt.Color(0, 0, 153));
    }//GEN-LAST:event_checkoutButtonMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellerPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellerPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellerPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellerPannel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellerPannel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JPanel addProductsPannel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel billAmountLabel;
    private javax.swing.JLabel billAmountLabel1;
    private javax.swing.JButton billNextButton;
    private javax.swing.JTable billTable;
    private javax.swing.JPanel billingPannel;
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JButton checkoutButton;
    private javax.swing.JButton clearButtnon;
    private javax.swing.JButton continueButton;
    private javax.swing.JTextField customerNameField;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JTextField customerPhoneField;
    private javax.swing.JLabel customerPhoneLabel;
    private javax.swing.JButton filterButton;
    private javax.swing.JLabel headingLabel;
    private javax.swing.JPanel itemCartPannel;
    private javax.swing.JTable itemCartTable;
    private javax.swing.JTextField itemNameField;
    private javax.swing.JTextField itemQuantityField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel productListPannel;
    private javax.swing.JTable productTable;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton refreshProductButton;
    private javax.swing.JButton removeItemButton;
    private javax.swing.JPanel salesPannel;
    private javax.swing.JTable salesTable;
    private javax.swing.JLabel sellerGenderLabel;
    private javax.swing.JLabel sellerNameLabel;
    private javax.swing.JLabel sellerPhoneLabel;
    private javax.swing.JLabel signoutLabel;
    private javax.swing.JPanel viewSalesPannel;
    private javax.swing.JLabel viewsalesLabel;
    // End of variables declaration//GEN-END:variables
}
